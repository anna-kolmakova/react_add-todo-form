{"version":3,"sources":["api/users.ts","api/todos.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","index.tsx"],"names":["id","name","username","email","title","completed","userId","UserInfo","user","className","href","TodoInfo","todo","classNames","TodoList","todos","map","findUser","usersFromServer","find","todosByUser","todosFromServer","App","useState","userID","setUserId","setTitle","setTodos","formError","setFormError","action","method","onSubmit","event","preventDefault","length","prev","sort","a","b","htmlFor","type","placeholder","value","onChange","target","replace","Number","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3bff9b5b.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import { User } from '../../types/User';\n\ntype Props = {\n  user: User\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const {\n    name,\n    email,\n  } = user;\n\n  return (\n    <a\n      className=\"UserInfo\"\n      href={`mailto:${email}`}\n    >\n      {name}\n    </a>\n  );\n};\n","import classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo,\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    id,\n    title,\n    completed,\n    user,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={classNames(\n        'TodoInfo', { 'TodoInfo--completed': completed === true }\n      )}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[]\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo\n          todo={todo}\n          key={todo.id}\n        />\n      ))}\n    </section>\n  );\n};\n","import './App.scss';\nimport React, { useState } from 'react';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { User } from './types/User';\nimport { Todo } from './types/Todo';\nimport { TodoList } from './components/TodoList';\n\nfunction findUser(userId: number): User | null {\n  return usersFromServer.find(user => user.id === userId) || null;\n}\n\nconst todosByUser: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: findUser(todo.userId),\n}));\n\nexport const App = () => {\n  const [userID, setUserId] = useState(0);\n  const [title, setTitle] = useState('');\n  const [todos, setTodos] = useState(todosByUser);\n  const [formError, setFormError] = useState(false);\n\n  const handleEnterTitle = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value.replace(/[^a-zA-Zа-яА-Я0-9 ]/g, ''));\n  };\n\n  const handleUserSelect = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserId(Number(event.target.value));\n  };\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    if (title.length > 0 && userID !== 0) {\n      setTodos(prev => [\n        ...prev,\n        {\n          id: [...todosFromServer]\n            .sort((a, b) => a.id - b.id)[todosByUser.length - 1].id + 1,\n          title,\n          completed: false,\n          userId: userID,\n          user: findUser(userID),\n        },\n      ]);\n      setTitle('');\n      setUserId(0);\n      setFormError(false);\n    }\n\n    if (title.length === 0 || userID === 0) {\n      setFormError(true);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label htmlFor=\"title\">Title: </label>\n          <input\n            type=\"text\"\n            placeholder=\"Enter a title\"\n            data-cy=\"titleInput\"\n            name=\"title\"\n            value={title}\n            onChange={handleEnterTitle}\n          />\n\n          {title.length === 0 && formError\n            && <span className=\"error\">Please enter a title</span>}\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"user\">User: </label>\n          <select\n            name=\"user\"\n            id=\"user\"\n            data-cy=\"userSelect\"\n            value={userID}\n            onChange={handleUserSelect}\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n            {usersFromServer.map(user => (\n              <option value={user.id} key={user.id}>{user.name}</option>\n            ))}\n          </select>\n          {userID === 0 && formError === true\n            && <span className=\"error\">Please choose a user</span>}\n        </div>\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n        >\n          Add\n        </button>\n      </form>\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}